@using CourseWorkWeb.Core.Converts
@using CourseWorkWeb.Models.Entity.Auth
@model Account
@{
    ViewData["Title"] = "Cabinet";
    ViewBag.Title = "MyPage";

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="shortcut icon" type="image/ico" href="~/image/icon.ico" />
    <link rel="stylesheet" type="text/css" href="~/css/cite1.css" />
    <link rel="stylesheet" type="text/css" href="~/css/cabinet.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body class="Cmain">
    <div class="CHeader">
        <div class="CNT">
            <div class="Clogo">
                <img class="CimgLogo"  src="~/image/logo.png">
                <div class="CAptecaName">
                <p>Tabletki</p>
                <p>APT.UA</p>
            </div>
            </div>
            <form class="CSearchField">
                <button class="CCatalog">
                    <img src="~/image/lines.png">
                    <p>Catologe</p>
                    
                </button>
                <div class="CInputBorder">
                    <input type="text" placeholder="Searching...">
                    <button class="CSerch" type="submit" ><img src="~/image/search.png"></button>
                </div>
            </form>
            <div class="CHelpField">
            <button class="CHelpFieldButton"> <img src="~/image/mag.png"></button>
            <button class="CHelpFieldButton"> <img src="~/image/person.png"></button>
            <button class="CHelpFieldButton"> <img src="~/image/phone.png"></button>
        </div>
        </div>
        <div class="CND">
        <button onclick="toCategory('Medicine')">
            <p>Medicine</p>
            <img src="~/image/pill.svg" alt="Medicine">
        </button>
        <button  onclick="toCategory('Vitamins')">
            <p>Vitamins</p>
            <img src="~/image/mpills.svg" alt="Vitamins">
        </button>
        <button onclick="toCategory('Hygiene')">
            <p>Hygiene</p>
            <img src="~/image/hygiene.svg" alt="Hygiene">
        </button>
        <button onclick="toCategory('Makeup')">
            <p>Makeup</p>
            <img src="~/image/makeup.svg" alt="Makeup">
        </button>
        <button onclick="toCategory('Children')">
            <p>For Children's</p>
            <img src="~/image/toy.svg" alt="For Children's">
        </button>
         <button onclick="toHome()">
            <p>Back</p>
            <img src="~/image/close.png" alt="Back">
        </button>
    </div>
    </div>
<form class="CabinetContainer" method="POST" asp-action="UpdateUser" asp-controller="YouCabinet">
    <div class="LeftSection">
        <div class="CFConteiner">
                <div class="fotoPart">
                    <div class="Foto">
                        <div style="display: flex; justify-content: center; align-items: center; flex-direction: column;">
                        <div class="fotocard" id="fotocard">
                        </div>
                            @{
                                if(Model.userPh is not null)
                                {
                                    <img style="width: 20vw; height: 30vh" src="@Model.userPh" name="rect"/>
                                }

                        }
                       
                        <div class="OperationField" id="form" enctype="multipart/form-data">

                                <input style="display: none;" value="@ViewBag.MyValue" type="text" id="myInput" name="Photo">
                                <input style="display: none;width: 15vw; height: 35vh" class="FileInput" type="file" id="fileInput1" name="FotoPath1" accept="image/*" onchange="previewImage()">
                                <div style="display: flex; flex-direction: column; align-items: center; margin-top: 10px;">
                                    <button style="width: 10vw; height: 5vh; margin-bottom: 10px; background: green; color: white; border-radius: 5px;" class="Upload" type="button" onclick="document.getElementById('fileInput1').click();">Upload</button>
                                    <button style="width: 10vw; height: 5vh; background: green; color: white; border-radius: 5px;">Update user</button>
                                </div>
                            </div>
                        </div>
                       </div>
                  

                </div>
   


        </div>
    </div>
    <div class="RightSection">
        @{
                var verify = Model.Verify is true ? "Verified" : "Unverified";

        }
        <div class="BorderName"><p>You Profile</p></div>
        <div class="CabinetsWords">
                <div><input type="text" style="display: none;" class="no-input" value="@Model.Id" name="Id" id="Phone_Account"></div>
           <div><p>Login :</p><input type="text" class="no-input" value="@Model.Username" name="Username" id="Phone_Account"></div>
           <div><p>Phone :</p><input type="text" class="no-input" value="@Model.Phone" name="Phone" id="Phone_Account"></div>
           <div><p>Email :</p><input type="text" class="no-input"  value="@Model.Email"   name="Email" id="Email_Account"></div>
           <div><p>Verify :</p><input type="text" class="no-input" value="@verify" name="Email" id="Email_Account"></div>

           </div>
      
         <div class="BorderName"><p>History Order</p></div>
    <div class="TableOrder">
<table>
    <thead><!--Ебаш форейчем и не парся тут имена не нужни-->
        <tr class="HederTable">
            <th>id</th>
            <th>Дата</th>
            <th>Цена</th>
            <th>Статус</th>
        </tr>
    </thead>
    <tbody>
        <tr class="itemTable">
            <td>1</td>
            <td>20.05.2024</td>
            <td>5000</td>
            <td>Виконано</td>
        </tr>
    </tbody>
</table>
    </div>
        
    </div>
</form>


</div>
    <script>
        async function previewImage() {
            try {

                const imagePath = await getFileInputPath('fileInput1');
                await createImage(imagePath);
                var img = document.getElementsByName('rect')[0];
                img.style.display = 'none';
            } catch (error) {
                console.error("Ошибка:", error.message);
            }
        }




        async function createImage(imagePath) {
            try {
                const div = document.getElementById('fotocard');
                if (!div) throw new Error('Element with id "fotocard" not found');


                while (div.firstChild) {
                    div.removeChild(div.firstChild);
                }

                const img = document.createElement('img');
                img.src = imagePath;
                
                div.appendChild(img);
            } catch (error) {
                console.error('Error:', error.message);
            }
        }


        async function getFileInputPath(fileInputId) {
            return new Promise((resolve, reject) => {
                const fileInput = document.getElementById(fileInputId);

                if (!fileInput || !fileInput.files || fileInput.files.length === 0) {
                    reject(new Error("No file selected"));
                    return;
                }

                const reader = new FileReader();

                reader.onload = function (event) {
                    const base64 = event.target.result;
                    var inputElement = document.getElementById('myInput');
                    inputElement.value = base64;
                    resolve(base64);
                };

                reader.onerror = function (error) {
                    reject(error);
                };

                reader.readAsDataURL(fileInput.files[0]);
            });
        }
    </script>
<script>
function toggleInputs(event) {
        event.preventDefault(); // Предотвращаем переход по ссылке
        var inputs = document.querySelectorAll('.CabinetsWords input');
        inputs.forEach(function(input) {
            if (input.classList.contains('no-input')) {
                input.classList.remove('no-input');
                input.classList.add('input');
                input.removeAttribute('readonly');
            } else {
                input.classList.remove('input');
                input.classList.add('no-input');
                input.setAttribute('readonly', true);
            }
        });
    }
</script>


<script>
    function toHome() {
       $.ajax({
        type: "POST",
        url: "/Catalog/Index",
        success: function (response) {
            console.log("Метод контроллера успешно вызван");
            window.location.href = "/"; 
        },
        error: function (xhr, status, error) {
            console.error("Произошла ошибка при вызове метода контроллера:", error);
        }
    });
}
function toCategory(word) {
    $.ajax({
        type: "POST",
        url: "/Category/Index",
        data: { word: word }, // Pass the 'word' parameter to the controller
        success: function (response) {
            console.log("Метод контроллера успешно вызван");
            window.location.href = "/Category/Index?word=" + word; // Redirect to the category page with the word parameter
        },
        error: function (xhr, status, error) {
            console.error("Произошла ошибка при вызове метода контроллера:", error);
        }
    });
}
function toProduct(id) {
    $.ajax({
        type: "POST",
        url: "/Product/Index",
        data: { id: id}, 
        success: function (response) {
            console.log("Метод контроллера успішно викликано");
            window.location.href = "/Product/Index?id=" + id; // Redirect to the category page with the word parameter
        },
        error: function (xhr, status, error) {
            console.error("Сталася помилка при виклику методу контролера:", error);
        }
    });
}
</script>

</body>

</html>